// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.Data;

namespace backend.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("backend.Models.Cliente", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("varchar(70)");

                    b.HasKey("id");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("backend.Models.Moeda", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("varchar(70)");

                    b.Property<decimal>("valor")
                        .HasColumnType("Decimal(15,2)");

                    b.HasKey("id");

                    b.ToTable("Moeda");
                });

            modelBuilder.Entity("backend.Models.Operacao", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("clienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("dataOperacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("moedaDestinoId")
                        .HasColumnType("int");

                    b.Property<int>("moedaOrigemId")
                        .HasColumnType("int");

                    b.Property<decimal>("taxa")
                        .HasColumnType("Decimal(15,2)");

                    b.Property<decimal>("valorConvertido")
                        .HasColumnType("Decimal(15,2)");

                    b.Property<decimal>("valorOriginal")
                        .HasColumnType("Decimal(15,2)");

                    b.HasKey("id");

                    b.HasIndex("clienteId");

                    b.HasIndex("moedaDestinoId");

                    b.HasIndex("moedaOrigemId");

                    b.ToTable("Operacao");
                });

            modelBuilder.Entity("backend.Models.Operacao", b =>
                {
                    b.HasOne("backend.Models.Cliente", "cliente")
                        .WithMany("operacoes")
                        .HasForeignKey("clienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Models.Moeda", "moedaDestino")
                        .WithMany("operacoesDestino")
                        .HasForeignKey("moedaDestinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Models.Moeda", "moedaOrigem")
                        .WithMany("operacoesOrigem")
                        .HasForeignKey("moedaOrigemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cliente");

                    b.Navigation("moedaDestino");

                    b.Navigation("moedaOrigem");
                });

            modelBuilder.Entity("backend.Models.Cliente", b =>
                {
                    b.Navigation("operacoes");
                });

            modelBuilder.Entity("backend.Models.Moeda", b =>
                {
                    b.Navigation("operacoesDestino");

                    b.Navigation("operacoesOrigem");
                });
#pragma warning restore 612, 618
        }
    }
}
